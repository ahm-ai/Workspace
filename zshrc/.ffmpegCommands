#!/bin/bash

# 1:0 Speakers
# 1:1 Airpods
# EXAMPLE: avfoundation -i "2:0"

# IN USE recNow && splitConvert
function showDevices(){
    ffmpeg -hide_banner -f avfoundation -list_devices true -i ""
}

function openSpeech(){
    open -a "Google Chrome" 'https://dh4ihowhowe4s.cloudfront.net/?speech'
    open -a "Audio MIDI Setup"
}

function makeFolder(){
    videoPath=~/Downloads/$(date +"%Y-%m-%d_%H-%M")
    mkdir -p $videoPath
    chmod 777 $videoPath
}

# ============= SCRIPTS ================

# RECORD LONG VIDEO
function recNow(){
    openSpeech 
    makeFolder # $videoPath will be available after this

    # RECORD VIDEO
    ffmpeg -y -f avfoundation -i "1:BlackHole 2ch" -async 2 -vsync 2 -r 60 -aq 0  $videoPath/video.mp4

    # ON CONTROL-C Execute:
    onCompleteSplitConvert $videoPath
    # open file in VSC 
    echo -e "\n ${BBlue} ðŸ¤– COMPLETE ${ENDCOLOR} :  ${videoPath}/transcript.srt \n " 
}


# RECORD IN SEGMENTS OF  5 seconds
function recordInSegments(){
    makeFolder

    curl -X POST http://localhost:8080/watch \
    -H "Content-Type: application/json" -d "{\"folderName\":\"$videoPath\"}"

    echo $PSS | sudo -S  ffmpeg -y -f avfoundation -i "1:BlackHole 2ch" -async 2 -vsync 2 -r 60 -aq 0  -f segment -segment_time 28 -reset_timestamps 1 $videoPath/output%03d.mp4
}


#  =================== TRANSFORMATIONS  ===================

function onCompleteSplitConvert(){

    echo -e "\n ${Blue} Splitting :: ${1}/video.mp4 ${ENDCOLOR} \n" &&
    splitLongVideo $1 &&
    echo -e "\n ${Blue} Converting :: ${1}/video-part_*.mp4 ${ENDCOLOR} \n"  &&
    whisperAllVideoParts $1 &&
    # JOIN_ALL_TEXT FILES
    cd $1 &&
    cat *.srt > transcript.srt  &&
    cat *.txt > transcript.txt  &&
    echo -e "\n ${Blue} Cleaning up :: ${1}/video-part_*.mp4 ${ENDCOLOR} \n"  &&
    cleanup $1 &&
}

function splitLongVideo(){
    # In chunks of 15 seconds :: $1 is the full path ~/Downloads/<FILENAME>
    ffmpeg -i $1/video.mp4 -c copy -f segment -segment_time 15 -reset_timestamps 1 $1/video-part_%03d.mp4
}


function whisperAllVideoParts(){
    # for each file in folder run the function convertWhisper :: $1 is the full path ~/Downloads/<FILENAME>
    cd $1 &&
    # for file in *.mp4; do convertWhisper $file; done
    for file in *.mp4; do if echo "$file" | grep -q "part"; then
     convertWhisper "$file"; fi;
    done
}

function cleanup(){
    # Remove all files that contain "part"
    cd $1 &&
    find . -name "*part*" -type f -delete
}


function recordAudio(){
    if [ -z "$1" ]
    then
        echo "RECORDING"
        ffmpeg -y -f avfoundation -i ":0" -t 60 output2.mp3 
    else
        echo "START RECORDING IN $1 SECONDS"
        ffmpeg -f avfoundation -i ":0" -f segment -segment_time 5 -reset_timestamps 1 output%03d.mp3
    fi
}


function convertWhisper(){
  echo -e "${Green}" 
   #    whisper $1 --fp16 False  --model tiny --language English --beam_size 1
   whisper $1 --fp16 False  --model base --language English --beam_size 1
  echo -e "${ENDCOLOR}" 
}


# INSTALL WHISPER
# 1. brew install ffmpeg
# 2. brew install rust
# 3. pip3 install git+https://github.com/openai/whisper.git 
# 4. pip3 install setuptools-rust

# function recordScreen(){
#     # Best so far;
#     ffmpeg -y -f avfoundation -i "1:1" -async 2 -vsync 2 output.mp4
#     #  Also works
#     ffmpeg -y -f avfoundation -i "1:1" -async 2 -vsync 2 -r 60  -aq 0 output.mp4
#     #  Best so far;
#     ffmpeg -y -f avfoundation -i "1:0" -async 2 -vsync 2 -r 60 -aq 0  output%03d.mp4
#     # Splitting version
#     sudo ffmpeg -y -f avfoundation -i "1:1" -async 2 -vsync 2 -r 60 -aq 0  -f segment -segment_time 5 -reset_timestamps 1 output%03d.mp4
# }